<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="nju.chuan.nn"
    xmlns="nju.chuan.nn" elementFormDefault="qualified">
    <xs:element name="nn">
        <xs:complexType>
            <xs:all>
                <xs:element name="hp" type="hyperParameter"/>
                <xs:element name="nnLayer">
                    <xs:complexType>
                        <xs:choice maxOccurs="unbounded">
                            <xs:element name="fc" type="fullyConnected" minOccurs="0" maxOccurs="unbounded" />
                            <xs:element name="conv2d" type="conv" minOccurs="0" maxOccurs="unbounded" />
                            <xs:element name="conv3d" type="conv" minOccurs="0" maxOccurs="unbounded" />
                            <xs:element name="convTranspose2d" type="convTranspose" minOccurs="0" maxOccurs="unbounded" />
                            <xs:element name="convTranspose3d" type="convTranspose" minOccurs="0" maxOccurs="unbounded" />
                        </xs:choice>
                    </xs:complexType>
                </xs:element>
            </xs:all>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="hyperParameter">
        <xs:sequence>
            <xs:element name="nEpoch" type="xs:unsignedInt" />
            <xs:element name="bs" type="xs:unsignedInt" />
            <xs:element name="lr" type="xs:float" />
            <xs:element name="nLatent" type="xs:unsignedByte" minOccurs="0"/>
            <xs:element name="iterD" type="xs:unsignedInt" minOccurs="0"/>
            <xs:element name="clip" type="xs:float" minOccurs="0"/>
            <xs:element name="lambda" type="xs:float" minOccurs="0"/>
            <xs:any minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="fullyConnected">
        <xs:sequence>
            <xs:element name="in_features" type="xs:unsignedInt" />
            <xs:element name="out_features" type="xs:unsignedInt" />
            <xs:element name="bias" type="xs:boolean" />
            <xs:element name="use_bn" type="xs:boolean" />
            <xs:element name="activate_mode" type="activateFuncWithParam" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:unsignedByte" use="required" />
    </xs:complexType>

    <xs:complexType name="conv">
        <xs:sequence>
            <xs:element name="in_channels" type="xs:unsignedInt" />
            <xs:element name="out_channels" type="xs:unsignedInt" />
            <xs:element name="kernel_size" type="xs:unsignedByte" />
            <xs:element name="stride" type="xs:unsignedByte" />
            <xs:element name="padding" type="xs:unsignedByte" />
            <xs:element name="bias" type="xs:boolean" />
            <xs:element name="use_bn" type="xs:boolean" />
            <xs:element name="activate_mode" type="activateFuncWithParam" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:unsignedByte" use="required" />
    </xs:complexType>

    <xs:complexType name="convTranspose">
        <xs:sequence>
            <xs:element name="in_channels" type="xs:unsignedInt" />
            <xs:element name="out_channels" type="xs:unsignedInt" />
            <xs:element name="kernel_size" type="xs:unsignedByte" />
            <xs:element name="stride" type="xs:unsignedByte" />
            <xs:element name="padding" type="xs:unsignedByte" />
            <xs:element name="output_padding" type="xs:unsignedByte" default="0" />
            <xs:element name="bias" type="xs:boolean" />
            <xs:element name="use_bn" type="xs:boolean" />
            <xs:element name="activate_mode" type="activateFuncWithParam" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:unsignedByte" use="required" />
    </xs:complexType>

    <xs:simpleType name="activateFunc">
        <xs:restriction base="xs:string">
            <xs:enumeration value="null"/>
            <xs:enumeration value="sigmoid"/>
            <xs:enumeration value="relu"/>
            <xs:enumeration value="leakyrelu"/>
            <xs:enumeration value="tanh"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="activateFuncWithParam">
        <xs:simpleContent>
            <xs:extension base="activateFunc">
                <xs:attribute name="param" type="xs:decimal"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
</xs:schema>